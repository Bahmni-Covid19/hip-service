(request, state, logger) => {
    logger.info("/v1/.well-known/openid-configuration is called");
    logger.info(request.body);
    return {
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(
        {
            "issuer": "http://oidc-server-mock:80",
            "jwks_uri": "http://oidc-server-mock:80/.well-known/openid-configuration/jwks",
            "authorization_endpoint": "http://oidc-server-mock:80/connect/authorize",
            "token_endpoint": "http://oidc-server-mock:80/connect/token",
            "userinfo_endpoint": "http://oidc-server-mock:80/connect/userinfo",
            "end_session_endpoint": "http://oidc-server-mock:80/connect/endsession",
            "check_session_iframe": "http://oidc-server-mock:80/connect/checksession",
            "revocation_endpoint": "http://oidc-server-mock:80/connect/revocation",
            "introspection_endpoint": "http://oidc-server-mock:80/connect/introspect",
            "device_authorization_endpoint": "http://oidc-server-mock:80/connect/deviceauthorization",
            "frontchannel_logout_supported": true,
            "frontchannel_logout_session_supported": true,
            "backchannel_logout_supported": true,
            "backchannel_logout_session_supported": true,
            "scopes_supported": [
                "profile",
                "email",
                "some-app-scope-1",
                "some-app-scope-2",
                "offline_access",
                "whatnot"
            ],
            "claims_supported": [
                "sub",
                "name",
                "family_name",
                "given_name",
                "middle_name",
                "nickname",
                "preferred_username",
                "profile",
                "picture",
                "website",
                "gender",
                "birthdate",
                "zoneinfo",
                "locale",
                "updated_at",
                "email",
                "email_verified"
            ],
            "grant_types_supported": [
                "authorization_code",
                "client_credentials",
                "refresh_token",
                "implicit",
                "password",
                "urn:ietf:params:oauth:grant-type:device_code"
            ],
            "response_types_supported": [
                "code",
                "token",
                "id_token",
                "id_token token",
                "code id_token",
                "code token",
                "code id_token token"
            ],
            "response_modes_supported": [
                "form_post",
                "query",
                "fragment"
            ],
            "token_endpoint_auth_methods_supported": [
                "client_secret_basic",
                "client_secret_post"
            ],
            "id_token_signing_alg_values_supported": [
                "RS256"
            ],
            "subject_types_supported": [
                "public"
            ],
            "code_challenge_methods_supported": [
                "plain",
                "S256"
            ],
            "request_parameter_supported": true
        }
      )
    };
  }
